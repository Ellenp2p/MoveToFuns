---
import { Moon, Sun } from "lucide-solid";
const items = ["Home", "About"];
---

<script>
  document.addEventListener("astro:page-load", () => {
    const getThemePreference = () => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    };
    const isDark = getThemePreference() === "dark";
    document.body.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.body.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      });
      observer.observe(document.body, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  });

  document.addEventListener("astro:after-swap", () => {
    let isDark = localStorage.theme === "dark";
    document.body.classList[isDark ? "add" : "remove"]("dark");
  });
</script>
<script is:inline>
  function toggleNightMode() {
    return;
    const body = document.body;

    body.classList.toggle("dark");

    let sun = document.querySelector("#Sun");
    if (sun) sun.classList.toggle("hidden");

    let moon = document.querySelector("#Moon");
    if (moon) moon.classList.toggle("hidden");
  }

  function toggleSide() {
    let sidebar = document.querySelector("#logo-sidebar");
    if (sidebar) {
      sidebar.classList.toggle("hidden");
      sidebar.classList.toggle("-translate-x-full");
    }
  }

  function toggleNav() {
    let nav = document.querySelector("#navbar-default");
    if (nav) {
      nav.classList.toggle("hidden");
    }
  }
</script>

<nav class="bg-white border-gray-200 dark:bg-gray-900 z-40 sticky top-0">
  <div
    class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
  >
    <button
      type="button"
      class="inline-flex items-center p-2 text-sm text-gray-500 rounded-lg lg:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
      onclick="toggleSide()"
    >
      <span class="sr-only">Open sidebar</span>
      <svg
        class="w-6 h-6"
        aria-hidden="true"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clip-rule="evenodd"
          fill-rule="evenodd"
          d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"
        ></path>
      </svg>
    </button>
    <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
      <!-- <img src="https://flowbite.com/docs/images/logo.svg" class="h-8" alt="Flowbite Logo" /> -->
      <span
        class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
        >Startrek</span
      >
    </a>
    <button
      id="navbar-toggle"
      type="button"
      class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
      onclick="toggleNav()"
    >
      <span class="sr-only">Open main menu</span>
      <svg
        class="w-5 h-5"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 17 14"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 1h15M1 7h15M1 13h15"></path>
      </svg>
    </button>
    <div class="hidden w-full md:block md:w-auto" id="navbar-default">
      <ul
        class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
      >
        {
          items.map((item: string) => (
            <li>
              <a
                href={`/${item == "Home" ? "" : item.toLowerCase()} `}
                class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
              >
                {item}
              </a>
            </li>
          ))
        }

        <li>
          <div
            class="py-2 px-3 select-none cursor-pointer"
            onclick="toggleNightMode()"
          >
            <Sun id="Sun" color="#ffffff" class="hidden" />
            <Moon id="Moon" color={"#000000"} />
          </div>
        </li>
      </ul>
    </div>
  </div>
</nav>
