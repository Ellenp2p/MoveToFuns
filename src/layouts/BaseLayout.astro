---
import BaseHead from "@/components/BaseHead.astro";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <BaseHead title={title} />
  </head>
  <body class="">
    <div class="w-full flex flex-col min-h-screen bg-pale-silver dark:bg-black h-full">
      <script is:inline>
        const getThemePreference = () => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        };
        const isDark = getThemePreference() === "dark";
        document.body.classList[isDark ? "add" : "remove"]("dark");

        document.addEventListener("astro:page-load", () => {
          if (typeof localStorage !== "undefined") {
            const observer = new MutationObserver(() => {
              const isDark = document.body.classList.contains("dark");
              localStorage.setItem("theme", isDark ? "dark" : "light");
            });
            observer.observe(document.body, {
              attributes: true,
              attributeFilter: ["class"],
            });
          }
        });

        document.addEventListener("astro:after-swap", () => {
          let isDark = localStorage.theme === "dark";
          document.body.classList[isDark ? "add" : "remove"]("dark");
        });
        // import { $currentThemeStore } from "@/store/DarkMode";
        // $currentThemeStore.subscribe((currentTheme ) =>{
        //   const isDark = currentTheme == 'dark';
        //   document.body.classList[isDark ? "add" : "remove"]("dark");
        // });
      </script>
      <div
        class="flex flex-col flex-grow mx-auto w-full h-full min-w-80  max-w-screen-xl"
      >
        <slot name="Header">
          <Header />
        </slot>
        <slot />
        <slot name="Footer">
          <Footer />
        </slot>
      </div>
    </div>
  </body>
</html>
